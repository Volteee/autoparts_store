# Generated by Django 5.2.1 on 2025-05-30 05:41

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('parts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_delivery_time', models.PositiveIntegerField(verbose_name='Минимальный срок доставки (дни)')),
                ('max_delivery_time', models.PositiveIntegerField(verbose_name='Максимальный срок доставки (дни)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('processing', 'В обработке'), ('completed', 'Выполнен'), ('canceled', 'Отменен')], default='draft', max_length=20, verbose_name='Статус заказа')),
                ('delivery_required', models.BooleanField(default=False, help_text='Отметьте если требуется доставка курьером', verbose_name='Требуется доставка')),
                ('delivery_cost', models.DecimalField(decimal_places=2, default=100.0, max_digits=10, verbose_name='Стоимость доставки')),
                ('delivery_address', models.TextField(blank=True, verbose_name='Адрес доставки')),
                ('delivery_district', models.CharField(blank=True, max_length=100, verbose_name='Район доставки')),
                ('delivery_time', models.DateTimeField(blank=True, null=True, verbose_name='Желаемое время доставки')),
                ('is_delivered', models.BooleanField(default=False, verbose_name='Доставлено')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.car', verbose_name='Автомобиль')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.customer', verbose_name='Покупатель')),
            ],
            options={
                'verbose_name': 'Заказ покупателя',
                'verbose_name_plural': 'Заказы покупателей',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('markup_percentage', models.FloatField(default=30, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Наценка (%)')),
                ('customer_order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_map', to='orders.customerorder', verbose_name='Заказ покупателя')),
            ],
            options={
                'verbose_name': 'Карта доставки',
                'verbose_name_plural': 'Карты доставки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryMapItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('is_selected', models.BooleanField(default=False, verbose_name='Выбрано покупателем')),
                ('delivery_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.deliverymap', verbose_name='Карта доставки')),
                ('delivery_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parts.deliveryoption', verbose_name='Вариант поставки')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parts.part', verbose_name='Деталь')),
            ],
            options={
                'verbose_name': 'Позиция карты доставки',
                'verbose_name_plural': 'Позиции карты доставки',
                'unique_together': {('delivery_map', 'part', 'delivery_option')},
            },
        ),
        migrations.CreateModel(
            name='SupplierOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('ordered_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата заказа')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('ordered', 'Заказан'), ('delivered', 'Доставлен'), ('canceled', 'Отменен')], default='draft', max_length=20, verbose_name='Статус заказа')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общая стоимость')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='parts.supplier', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Заказ поставщику',
                'verbose_name_plural': 'Заказы поставщикам',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoodsReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата получения')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Общая сумма')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='parts.supplier', verbose_name='Поставщик')),
                ('supplier_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='orders.supplierorder', verbose_name='Заказ поставщику')),
            ],
            options={
                'verbose_name': 'Приходная накладная',
                'verbose_name_plural': 'Приходные накладные',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='SupplierOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Цена за единицу')),
                ('delivery_map_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplier_order_items', to='orders.deliverymapitem', verbose_name='Позиция карты доставки')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parts.part', verbose_name='Деталь')),
                ('supplier_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.supplierorder', verbose_name='Заказ поставщику')),
            ],
            options={
                'verbose_name': 'Позиция заказа поставщику',
                'verbose_name_plural': 'Позиции заказа поставщику',
                'unique_together': {('supplier_order', 'part')},
            },
        ),
        migrations.CreateModel(
            name='GoodsReceiptItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_received', models.PositiveIntegerField(verbose_name='Полученное количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Цена за единицу')),
                ('part', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipt_parts', to='parts.part', verbose_name='Запчасть')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.goodsreceipt', verbose_name='Накладная')),
                ('supplier_order_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipt_items', to='orders.supplierorderitem', verbose_name='Позиция заказа')),
            ],
            options={
                'verbose_name': 'Позиция приходной накладной',
                'verbose_name_plural': 'Позиции приходных накладных',
            },
        ),
        migrations.CreateModel(
            name='DriverAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата доставки')),
                ('district', models.CharField(max_length=100, verbose_name='Район')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='core.driver', verbose_name='Водитель')),
                ('orders', models.ManyToManyField(blank=True, related_name='driver_assignments', to='orders.customerorder', verbose_name='Заказы')),
            ],
            options={
                'verbose_name': 'Назначение водителя',
                'verbose_name_plural': 'Назначения водителей',
                'ordering': ['-date'],
                'unique_together': {('driver', 'date', 'district')},
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.customerorder', verbose_name='Заказ')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parts.part', verbose_name='Деталь')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказа',
                'unique_together': {('order', 'part')},
            },
        ),
        migrations.CreateModel(
            name='SupplierPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(verbose_name='Месяц')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма платежа')),
                ('payment_date', models.DateField(auto_now_add=True, verbose_name='Дата платежа')),
                ('is_prepayment', models.BooleanField(default=True, verbose_name='Предоплата')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='parts.supplier', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Платеж поставщику',
                'verbose_name_plural': 'Платежи поставщикам',
                'ordering': ['-month'],
                'unique_together': {('supplier', 'month')},
            },
        ),
    ]
